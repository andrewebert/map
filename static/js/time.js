// Generated by CoffeeScript 1.7.1
app.directive('time', function($timeout, $location) {
  return function($scope) {
    var NOW, NOW_MONTH, NOW_YEAR, START_MONTH, START_YEAR, format_month, from_url_time, m, times, to_url_time, y, _i, _j;
    format_month = function(m) {
      return (m < 10 ? "0" : "") + m.toString();
    };
    START_YEAR = 1945;
    START_MONTH = 1;
    NOW_YEAR = 2018;
    NOW_MONTH = 2;
    NOW = "" + NOW_YEAR + "_" + (format_month(NOW_MONTH));
    times = [];
    for (y = _i = NOW_YEAR; NOW_YEAR <= START_YEAR ? _i <= START_YEAR : _i >= START_YEAR; y = NOW_YEAR <= START_YEAR ? ++_i : --_i) {
      for (m = _j = 12; _j >= 1; m = --_j) {
        if (!(y >= NOW_YEAR && m > NOW_MONTH)) {
          if (m < 10) {
            times.push("" + y + "_0" + m);
          } else {
            times.push("" + y + "_" + m);
          }
        }
      }
    }
    $scope.times = times;
    $scope.max_time = (NOW_YEAR - START_YEAR) * 12 + NOW_MONTH - START_MONTH;
    $scope.paused = true;
    $scope.pretty_format = function(t) {
      var month, months, time, year;
      time = parseInt(t);
      year = Math.floor(time / 12) + START_YEAR;
      month = time % 12 + 1;
      months = {
        1: "Jan",
        2: "Feb",
        3: "Mar",
        4: "Apr",
        5: "May",
        6: "Jun",
        7: "Jul",
        8: "Aug",
        9: "Sep",
        10: "Oct",
        11: "Nov",
        12: "Dec"
      };
      return "" + months[month] + " " + year;
    };
    to_url_time = function(time) {
      var month, year;
      year = Math.floor(time / 12) + START_YEAR;
      month = time % 12 + 1;
      return "" + year + "-" + (month < 10 ? "0" : "") + month;
    };
    from_url_time = function(url) {
      var month, time, year, _ref;
      _ref = url.slice(1).split("-"), year = _ref[0], month = _ref[1];
      time = (parseInt(year) - START_YEAR) * 12 + parseInt(month) - 1;
      if (isNaN(time)) {
        return $scope.max_time;
      }
      return Math.max(Math.min(time, $scope.max_time), 0);
    };
    $scope.$watch((function() {
      return $location.url();
    }), function(url) {
      return $scope.raw_time = from_url_time(url).toString();
    });
    $scope.$watch('raw_time', function(value) {
      $scope.time = parseInt(value);
      return $location.url(to_url_time($scope.time));
    });
    $scope.year = function() {
      return Math.floor($scope.time / 12) + START_YEAR;
    };
    $scope.set_time = function(new_time) {
      if (new_time < 0) {
        return $scope.raw_time = "0";
      } else if (new_time > $scope.max_time) {
        return $scope.raw_time = $scope.max_time.toString();
      } else {
        return $scope.raw_time = new_time.toString();
      }
    };
    $scope.play = function() {
      $scope.paused = !$scope.paused;
      if (!$scope.paused) {
        if ($scope.time === $scope.max_time) {
          $scope.raw_time = "0";
          $scope.time = 0;
        }
        return $scope.tick();
      }
    };
    return $scope.tick = function() {
      if (!$scope.paused) {
        if ($scope.time < $scope.max_time) {
          $scope.raw_time = ($scope.time + 1).toString();
        } else {
          $scope.paused = true;
        }
        return $timeout($scope.tick, 1000 / 12 / 2);
      }
    };
  };
});
